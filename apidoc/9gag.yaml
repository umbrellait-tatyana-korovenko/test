openapi: "3.0.0"
info:
  title: 9GAG API
  version: 2.0.0
  contact:
    email: calvin@9gag.com
servers:
- url: https://api.9gag.com/v2
  description: Production API
- url: https://api.9jokes.com/v2
  description: Staging API
tags:
  - name: Authentication
    description: ''
  - name: Section
    description: ''
  - name: Post
    description: ''
  - name: User
    description: ''
  - name: Upload
    description: ''
  - name: Notification
    description: ''
  - name: Misc
    description: ''


x-globalCommonRequestHeaders: &COMMON_REQUEST_HEADERS
  - $ref: "#/components/parameters/headerTimestamp"
  - $ref: "#/components/parameters/headerAppId"
  - $ref: "#/components/parameters/headerDeviceUuid"
  - $ref: "#/components/parameters/headerRequestSignature"
  - $ref: "#/components/parameters/headerUserAgent"
  - $ref: "#/components/parameters/headerDeviceType"

x-globalCommonAuthHeaders: &COMMON_AUTH_HEADERS
  - $ref: "#/components/parameters/headerTimestamp"
  - $ref: "#/components/parameters/headerAppId"
  - $ref: "#/components/parameters/headerDeviceUuid"
  - $ref: "#/components/parameters/headerRequestSignature"
  - $ref: "#/components/parameters/headerUserAgent"
  - $ref: "#/components/parameters/headerUserToken"
  - $ref: "#/components/parameters/headerDeviceType"

paths:
  /guest-token:
    parameters: *COMMON_REQUEST_HEADERS
    get:
      tags:
        - Authentication
      summary: Get a guest token for authentication of other APIs
      description: 'Disassociate userPushToken from any user if given'
      security:
        - authAppId: []
          authDeviceUuid: []
          authTimestamp: []
          authRequestSignature: []
      parameters:
        - $ref: "#/components/parameters/userPushToken"
      responses:
        '200':
          description: A JSON response containing a guest token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGuestToken'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /group-list:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Section
      summary: Get a list of available post sections
      description: ''
      responses:
        '200':
          description: A JSON response containing a list of available post sections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGroupList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-list:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Post
      summary: Get a list of posts based on the request parameters
      description: ''
      parameters:
        - name: olderThan
          in: query
          description: 'A reference post ID, for getting paged results'
          schema:
            type: string
            example: apQ0Y0b
        - name: type
          in: query
          description: >
            The type of the post list
              * hot - Hot
              * hot-time - Hot in chronological order
              * trending - Trending
              * fresh - Fresh
              * fresh-comment - Fresh Comment
              * board - Board
          schema:
            type: string
            enum:
              - hot
              - hot-time
              - trending
              - fresh
              - fresh-comment
              - board
              - vote (Deprecated)
              - chat (Deprecated)
            default: hot
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 9
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-list/group/{groupId}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Section
      summary: Get a list of section posts based on the request parameters
      description: ''
      parameters:
        - name: groupId
          in: path
          description: The group ID of the post list.
          schema:
            type: integer
            format: int32
            example: 2
        - name: olderThan
          in: query
          description: 'A reference post ID, for getting paged results'
          schema:
            type: string
            example: apQ0Y0b
        - name: type
          in: query
          description: >
            The type of the post list
              * hot - Hot
              * fresh - Fresh
          schema:
            type: string
            enum:
              - hot
              - fresh
              - vote (Deprecated)
            default: hot
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 9
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-list/type/{profileType}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get authenticated user profile posts
      description: ''
      parameters:
        - name: profileType
          in: path
          description: >
            The type of the user profile
              * overview - Overview
              * upvote - Upvotes
              * upload - Uploads
              * comment - Comments
              * saved - Saved posts
              * followed-board - Followed boards
          schema:
            type: string
            enum:
              - overview
              - upvote
              - upload
              - comment
              - saved
              - followed-board
            default: hot
        - name: olderThan
          in: query
          description: 'A reference post ID, for getting paged results'
          schema:
            type: string
            example: apQ0Y0b
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 9
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-list/type/{profileType}/accountId/{accountId}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get user profile posts by accountId
      description: ''
      parameters:
        - name: profileType
          in: path
          description: >
            The type of the user profile
              * overview - Overview
              * upvote - Upvotes
              * upload - Posts
              * comment - Comments
          schema:
            type: string
            enum:
              - overview
              - upvote
              - upload
              - comment
            default: hot
        - name: accountId
          in: path
          description: Account ID of 9gag user
          schema:
            type: string
            example: '13169938'
        - name: olderThan
          in: query
          description: 'A reference post ID, for getting paged results'
          schema:
            type: string
            example: apQ0Y0b
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 9
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-list/type/{profileType}/loginName/{loginName}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get user profile posts by username
      description: ''
      parameters:
        - name: profileType
          in: path
          description: >
            The type of the user profile
              * overview - Overview
              * upvote - Upvotes
              * upload - Posts
              * comment - Comments
          schema:
            type: string
            enum:
              - overview
              - upvote
              - upload
              - comment
            default: hot
        - name: loginName
          in: path
          description: Username of 9gag user
          schema:
            type: string
            example: calvin
        - name: olderThan
          in: query
          description: 'A reference post ID, for getting paged results'
          schema:
            type: string
            example: apQ0Y0b
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 9
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /latest-entry-ids:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Post
      summary: Check new posts with latest entryIds from post-list
      description: ''
      parameters:
        - name: type
          in: query
          description: See /post-list type
          schema:
            type: string
            default: hot
        - name: group
          in: query
          description: See /post-list/group/{groupId}
          schema:
            type: string
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing a list of entryIds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLatestEntryIds'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /search:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Post
      summary: Search posts with given query
      description: ''
      parameters:
        - name: query
          in: query
          description: The query to search for
          schema:
            type: string
        - name: fromIndex
          in: query
          description: Offset for paged results
          schema:
            type: integer
            format: int32
            default: 0
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 10
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSearchPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /tag-search:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Post
      summary: Search posts with given tag
      description: ''
      parameters:
        - name: query
          in: query
          description: The tag to search for
          schema:
            type: string
        - name: fromIndex
          in: query
          description: Offset for paged results
          schema:
            type: integer
            format: int32
            default: 0
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortBy
          in: query
          description: >
            The type of the tag post list
              * popular - Hot
              * latest - Fresh
          schema:
            type: string
            enum:
              - popular
              - latest
            default: populaar
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing a list of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTagSearchPostList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Post
      summary: Get the details of post(s)
      description: ''
      parameters:
        - name: entryIds
          in: query
          description: A comma separated list of post IDs
          schema:
            type: string
            example: aee0EP5,aQe42G7
        - $ref: "#/components/parameters/entryTypes"
      responses:
        '200':
          description: A JSON response containing the post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - Post
      summary: Remove post
      parameters:
        - name: entryId
          in: query
          description: Post to be deleted
          schema:
            type: string
            example: aee0EP5
      responses:
        '200':
          description: A JSON response containing the post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostDelete'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-save:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Post
      summary: Save post
      parameters:
        - name: id
          in: query
          description: Post to be saved
          schema:
            type: string
            example: aee0EP5
      responses:
        '200':
          description: Save post successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostSave'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - Post
      summary: Unsave post
      parameters:
        - name: id
          in: query
          description: Post to be unsaved
          schema:
            type: string
            example: aee0EP5
      responses:
        '200':
          description: Unsave post successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostSave'
        '401':
          $ref: '#/components/responses/Unauthorized'


  /vote:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Post
      summary: Vote posts
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                entryIds:
                  description: List of post ID, commas separated
                  type: string
                  example: amX4Zrd,aee0EP5,aQe42G7
                scores:
                  description: List of votes, commas separated
                  type: string
                  example: 1,0,-1
              required:
                - entryIds
                - scores
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVote'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /report/entryIds/{entryIds}:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Post
      summary: Report posts
      parameters:
        - name: entryIds
          in: path
          description: List of post ID, commas separated
          schema:
            type: string
            example: amX4Zrd,aee0EP5
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                userIds:
                  description: List of user ID, commas separated (either entryIds or userIds should be provided)
                  type: string
                  example: 13168934,13168935
                reasons:
                  description: List of reason ID, commas separated
                  type: string
                  example: 2,1
              required:
                - reasons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReport'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /report/userIds/{userIds}:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Report users
      parameters:
        - name: userIds
          in: path
          description: List of user ID, commas separated
          schema:
            type: string
            example: 13168934,13168935
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                reasons:
                  description: List of reason ID, commas separated
                  type: string
                  example: 2,1
              required:
                - reasons
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReport'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-token/loginMethod/email:
    parameters: *COMMON_REQUEST_HEADERS
    post:
      tags:
        - User
      summary: Signup with email
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  description: Account Email
                  type: string
                password:
                  description: Account Password
                  type: string
                fullName:
                  description: Full Name
                  type: string
                language:
                  $ref: "#/components/parameters/userLanguage"
                timezone:
                  $ref: "#/components/parameters/userTimezone"
                pushToken:
                  $ref: "#/components/parameters/userPushToken"
                ageVerified:
                  description: Age verified
                  type: integer
                  example: 1
              required:
                - email
                - password
                - fullName
                - language
                - timezone
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserToken'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-token/loginMethod/9gag:
    parameters: *COMMON_REQUEST_HEADERS
    post:
      tags:
        - User
      summary: Login with username/email
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                loginName:
                  description: Account username/email
                  type: string
                password:
                  description: Account Password
                  type: string
                language:
                  $ref: "#/components/parameters/userLanguage"
                pushToken:
                  $ref: "#/components/parameters/userPushToken"
              required:
                - loginName
                - password
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserToken'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-token/loginMethod/facebook:
    parameters: *COMMON_REQUEST_HEADERS
    post:
      tags:
        - User
      summary: Login/Signup with Facebook
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                userAccessToken:
                  description: Facebook access token from Facebook SDK
                  type: string
                language:
                  $ref: "#/components/parameters/userLanguage"
                pushToken:
                  $ref: "#/components/parameters/userPushToken"
                required:
                  - userAccessToken
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserToken'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-token/loginMethod/google:
    parameters: *COMMON_REQUEST_HEADERS
    post:
      tags:
        - User
      summary: Login/Signup with Google
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                userAccessToken:
                  description: Google oauth2 token from Google SDK
                  type: string
                language:
                  $ref: "#/components/parameters/userLanguage"
                pushToken:
                  $ref: "#/components/parameters/userPushToken"
                required:
                  - userAccessToken
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserToken'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-token/loginMethod/renew:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Renew token
      description: 'Exchange a new token with a valid userToken'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                language:
                  $ref: "#/components/parameters/userLanguage"
                pushToken:
                  $ref: "#/components/parameters/userPushToken"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserToken'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /user-token:
    parameters: *COMMON_AUTH_HEADERS
    delete:
      tags:
        - User
      summary: Logout
      description: 'Invalidate userToken and disassociate userPushToken'
      parameters:
        - $ref: "#/components/parameters/userPushToken"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-profile/accountId/{accountId}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get details of user by accountId
      description: ''
      parameters:
        - name: accountId
          in: path
          description: Account ID of 9gag user
          schema:
            type: string
            example: '13169938'
      responses:
        '200':
          description: A JSON response containing the user profile
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiProfileUser'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-profile/loginName/{loginName}:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get details of user by username
      description: ''
      parameters:
        - name: loginName
          in: path
          description: Username of 9gag user
          schema:
            type: string
            example: calvin
      responses:
        '200':
          description: A JSON response containing the user profile
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiProfileUser'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-profile:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get details of authenticated user
      description: ''
      responses:
        '200':
          description: A JSON response containing the member details of the authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAuthenticatedUser'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-info:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get user info of authenticated user
      description: ''
      responses:
        '200':
          description: A JSON response containing the user info
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-block:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get a list of blocked users
      description: ''
      parameters:
        - name: fromIndex
          in: query
          description: Offset for paged results
          schema:
            type: integer
            format: int32
            default: 0
        - name: itemCount
          in: query
          description: The number of items to return
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: A JSON response containing a list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBlockUserList'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-block/accountId/{accountId}:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Block user by accountId
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
            example: '13169938'
      responses:
        '200':
          description: Block user successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBlockUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags:
        - User
      summary: Unblock user by accountId
      parameters:
        - name: accountId
          in: path
          schema:
            type: string
            example: '13169938'
      responses:
        '200':
          description: Unblock user successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBlockUser'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-forgot-password:
    parameters: *COMMON_REQUEST_HEADERS
    post:
      tags:
        - User
      summary: Request for password reset, recovery email will be sent upon request success.
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  description: Email of account
                  type: string
      responses:
        '200':
          description: A JSON response containing result of password request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserForgotPassword'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-change-password:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Change login password for login with username/email
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                oldPassword:
                  description: Current password
                  type: string
                newPassword:
                  description: New password
                  type: string
                newPasswordRepeat:
                  description: New password (repeat)
                  type: string
      responses:
        '200':
          description: A JSON response containing result of password request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserChangePassword'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-change-avatar:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Change user avatar
      description: ''
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                avatarMethod:
                  description: Type of avatar change
                  type: string
                  enum:
                    - remove
                    - random
                avatar:
                  description: Avatar image to upload
                  type: string
                  format: binary
      responses:
        '200':
          description: A JSON response containing result of avatar update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserChangeAvatar'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-social:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Link social account
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                platform:
                  description: Name of social platform
                  type: string
                  enum:
                    - facebook
                    - google
                    - google-plus (deprecated)
                  example: facebook
                userAccessToken:
                  description: Access token of given soical account
                  type: string
                  example: EAACUWzZBgBg8BAOHzPXg7nZABC
                bind:
                  description: Binding flag. 0 - Unlink social account,  1 - Link social account
                  type: integer
                  example: 1
      responses:
        '200':
          description: A JSON response containing result of linking social account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserSocial'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /settings:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Update user profile settings and information
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                loginName:
                  description: Change username
                  type: string
                  example: calvintsang
                email:
                  description: Request to change email
                  type: string
                  example: calvin@example.com
                fullName:
                  description: Full name of user
                  type: string
                  example: Calvin Tsang
                about:
                  type: string
                  example: My Funny Collection
                country:
                  type: string
                  example: 'jp'
                gender:
                  type: string
                  example: 'M'
                  enum:
                    - M
                    - F
                safeMode:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 0
                nsfwMode:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 0
                ageVerified:
                  type: integer
                  description: Age verified
                  example: 1
                birthday:
                  type: string
                  description: Birthday in YYYY-MM-DD format
                  example: '2000-12-31'
                emojiStatus:
                  type: string
                  description: Update emoji status
                  example: 🇩🇪
                hideProBadge:
                  type: integer
                  description: 0 - show, 1 - hide
                  example: 0
                onlineStatusMode:
                  type: integer
                  description: 1 - Normal, 2 - Private, 3 - Ninja (PRO+ only)
                  example: 2
                accentColor:
                  type: string
                  description: Accent color for PRO+ users. Pass empty string to reset to default.
                  example: 'Blue'
                backgroundColor:
                  type: string
                  description: Background color for PRO+ users. Pass empty string to reset to default.
                  example: 'Red'
      responses:
        '200':
          description: A JSON response containing result of settings and user information update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-notifications:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Notification
      summary: Get notifications of authenticated user
      description: ''
      parameters:
        - name: refKey
          in: query
          description: Reference key for pagination
          schema:
            type: string
      responses:
        '200':
          description: A JSON response containing the notifications
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserNotifications'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-push-settings:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Notification
      summary: Get push notification settings
      description: ''
      responses:
        '200':
          description: A JSON response containing the push notification settings
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserPushSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-push-settings-update:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Notification
      summary: Update push notification settings
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                FEATURED:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_REPLY:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_MENTION:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_POST_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_POST_COMMENT:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_COMMENT_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_COMMENT_REPLY:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
      responses:
        '200':
          description: A JSON response containing result of push notification settings update
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserPushSettingsUpdate'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-notifications-item-read-state:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Notification
      summary: Mark read state of user notifications
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                itemKeys:
                  type: string
                  description: List of user notification IDs, commas separated
                  example: ni_a_2cd0d9b355bc62ff97d04c2c7721708c75ba590b_1_UPVOTE_8004228,ni_a_2cd0d9b355bc62ff97d04c2c7721708c75ba590b_1_UPVOTE_8004226
                states:
                  type: string
                  description: Read states of user notifications, commas separated. 0 - unread, 1 - read
                  example: 1,1
      responses:
        '200':
          description: A JSON response containing result of user notification read states update
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserNotificationsItemReadState'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /board-notification:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Notification
      summary: Update board notification
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  type: string
                  description: 'Board post ID'
                  required: true
                  example: aL00XAV
                mute:
                  type: integer
                  description: 0 - Unmute, 1 - Mute
                  required: true
                  example: 1
                muteTs:
                  type: integer
                  description: Set a optional muteTs in seconds if the mute should expire after certain period
                  example: 86400
      responses:
        '200':
          description: Update successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiBoardNotification'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /follow-thread:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Notification
      summary: Get follow thread status
      description: ''
      parameters:
        - name: threadId
          description: The threadId
          in: query
          example: Y2lkPWNfMTU3MjYwNDEyMjkzNjYyOTYwJmFpZD0xNTAwOTM4NA
          schema:
            type: string
      responses:
        '200':
          description: A JSON response containing the notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFollowThreadStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - Notification
      summary: Follow/unfollow the thread
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                threadId:
                  type: string
                  description: threadId
                  required: true
                  example: Y2lkPWNfMTU3MjYwNDEyMjkzNjYyOTYwJmFpZD0xNTAwOTM4NA
                follow:
                  type: integer
                  description: 0 - Unfollow, 1 - Follow
                  required: true
                  example: 1
      responses:
        '200':
          description: Update successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFollowThread'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-purchase-validation:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - User
      summary: Validate in-app purchase on iOS AppStore / Android Play Store
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                type:
                  type: string
                  description: 'Platform of the purchase'
                  example: google
                  enum:
                    - apple
                    - google
                packageName:
                  type: string
                  description: 'Package ID of the app'
                  example: com.ninegag.android.app
                productId:
                  type: string
                  description: 'Product ID of the purchased in-app product'
                  example: com.ninegag.android.app.pro
                payload:
                  type: string
                  description: 'Payload associated with the purchase'
      responses:
        '200':
          description: A JSON response containing result of validation
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUserPurchaseValidation'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /user-purchase-binding:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - User
      summary: Get the user binded to the given purchase token
      description: ''
      parameters:
        - name: token
          description: The purchase token
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A JSON response containing the profile of the user binded to the token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiProfileUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - User
      summary: Transfer the binding of a lifetime purchase from one user to another
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  type: string
                  description: 'Purchase token to be transferred'
                userId:
                  type: string
                  description: 'The new user ID to bind with the purchase'
                  example: '13173172'
      responses:
        '200':
          description: A JSON response containing result of validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserPurchaseBindingPost'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-quota:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Upload
      summary: Get post upload quota
      description: ''
      responses:
        '200':
          description: A JSON response containing information of post upload quota
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostQuota'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /config:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Misc
      summary: Get app configs
      description: ''
      responses:
        '200':
          description: A JSON response containing information of app configs
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /url-info:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Upload
      summary: Get url infos
      description: ''
      parameters:
        - name: urls
          description: A comma separated list of URLs
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A JSON response containing information of url infos
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiUrlInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/metaData:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Submit meta data for post creation
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                uploadId:
                  type: string
                  example: 'randomID1509949660'
                title:
                  type: string
                  example: 'Funny cat'
                isNSFW:
                  type: integer
                  description: 0 - non-NSFW, 1 - NSFW
                  example: 0
                tags:
                  type: string
                  description: List of post tags, commas separated.
                  example: cute,cats,pets
                section:
                  type: string
                  description: List of sections, commas separated.
                  example: cute,funny
                skipFromLists:
                  type: integer
                  description: Post status will be profile only.
                  example: 0
                articleCoverMediaId:
                  type: string
                  description: Cover media ID for article post
                  example: alG54a
      responses:
        '200':
          description: A JSON response containing result of post data submission
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostSubmit'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/mediaData:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Submit data for media post creation
      description: ''
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploadId:
                  type: string
                  example: 'randomID1509949660'
                mediaData:
                  description: Media to upload, support jpg/png/gif/mp4/m4v/mov/webm
                  type: string
                  format: binary

      responses:
        '200':
          description: A JSON response containing result of post data submission
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostSubmit'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/urlData:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Submit data for media post creation
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                uploadId:
                  type: string
                  example: 'randomID1509949660'
                urlMedia:
                  type: string
                  example: 'https://www.youtube.com/watch?v=hT_nvWreIhg'

      responses:
        '200':
          description: A JSON response containing result of post data submission
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostSubmitUrlData'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/articleMedia:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Submit media for article post creation (either urlMedia or mediaData should be provided)
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                uploadId:
                  type: string
                  example: 'randomID1509949660'
                urlMedia:
                  type: string
                  description: Article media by URL
                  example: 'https://www.youtube.com/watch?v=hT_nvWreIhg'
                mediaData:
                  description: Article Media by upload, support jpg/png/gif/mp4/m4v/mov/webm
                  type: string
                  format: binary

      responses:
        '200':
          description: A JSON response containing result of post data submission with media
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostSubmitArticleMedia'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/articleData:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Submit article blocks for article post creation
      description: ''
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                uploadId:
                  type: string
                  example: 'randomID1509949660'
                articleBlocks:
                  type: string
                  example: '[{type: "RichText", content: "para1"}, {type: "Media", mediaId: "azbbmAz", caption: "pic1"}]'
      responses:
        '200':
          description: A JSON response containing result of post data submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPostSubmitArticleData'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /post-submit/step/triggerCreation:
    parameters: *COMMON_AUTH_HEADERS
    post:
      tags:
        - Upload
      summary: Trigger post creation
      description: ''
      responses:
        '200':
          description: A JSON response containing result of post submission
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiPostSubmit'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /tag-suggest:
    parameters: *COMMON_AUTH_HEADERS
    get:
      tags:
        - Misc
      summary: Suggest tags with given query
      description: ''
      parameters:
        - name: query
          required: true
          in: query
          schema:
            type: string
        - name: count
          in: query
          description: The number of suggestions to return
          schema:
            type: integer
            format: int32
            default: 10
        - name: pre
          in: query
          description: Highlight pre tag
          schema:
            type: string
            default: '<em>'
        - name: post
          in: query
          description: Highlight post tag
          schema:
            type: string
            default: '</em>'
      responses:
        '200':
          description: A JSON response containing a list of tag suggestions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTagSuggestions'
        '401':
          $ref: '#/components/responses/Unauthorized'

security:
  - authAppId: []
    authDeviceUuid: []
    authTimestamp: []
    authRequestSignature: []
    authUserToken: []

components:
  securitySchemes:
    authAppId:
      type: apiKey
      in: header
      name: 9GAG-APP_ID
    authDeviceUuid:
      type: apiKey
      in: header
      name: 9GAG-DEVICE_UUID
    authUserToken:
      type: apiKey
      in: header
      name: 9GAG-9GAG_TOKEN
    authTimestamp:
      type: apiKey
      in: header
      name: 9GAG-TIMESTAMP
    authRequestSignature:
      type: apiKey
      in: header
      name: REQUEST-SIGNATURE

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiUnauthorized'

  schemas:
    ResponseMeta:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          example: 1499666079439
        status:
          type: string
          enum:
            - Success
            - Failure
          example: Success
        sid:
          type: string
          description: Server assigned session ID
          example: cHWBRXTUNWeMRVRywEVNJDTUVVY
    ApiSuccess:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
    ApiUnauthorized:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                status:
                  example: Failure
                errorCode:
                  type: string
                  description: A server defined error code
                  example: UNAUTHORIZED
                errorMessage:
                  type: string
                  description: 'The reason of failure, if any'
                  example: Not authorized.
        data:
          type: object

    ApiPostInfo:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            posts:
              type: array
              items:
                $ref: '#/components/schemas/Post'
    ApiPostDelete:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    - NOT_FOUND
                    - NOT_ALLOWED
        data:
          type: object
    ApiPostSave:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
    ApiVote:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            entryIds:
              type: array
              description: List of post ID processed
              items:
                type: string
    ApiReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            entryIds:
              type: array
              description: List of post ID processed
              items:
                type: string

    ApiPostList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            didEndOfList:
              type: integer
              format: int32
              description: >
                0 if there are most posts available older than the last post of
                the returned posts, 1 if otherwise
              example: 0
            posts:
              type: array
              items:
                $ref: '#/components/schemas/Post'
            featuredAds:
              type: array
              items:
                $ref: '#/components/schemas/FeaturedAd'
            targetedAdTags:
              type: object
              description: '[Deprecated]'
            updateCount:
              type: integer

    ApiUserPostList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            didEndOfList:
              type: integer
              format: int32
              description: >
                0 if there are most posts available older than the last post of
                the returned posts, 1 if otherwise
              example: 0
            posts:
              type: array
              items:
                $ref: '#/components/schemas/ProfilePost'
            targetedAdTags:
              type: object
              description: '[Deprecated]'
            updateCount:
              type: integer

    ApiSearchPostList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            didEndOfList:
              type: integer
              format: int32
              description: >
                0 if there are most posts available older than the last post of
                the returned posts, 1 if otherwise
              example: 0
            posts:
              type: array
              items:
                $ref: '#/components/schemas/Post'
            search:
              type: object
              properties:
                key:
                  type: string
                  example: Endgame
                url:
                  type: string
                  example: https://9gag.com/search?query=Endgame
                isSensitive:
                  type: integer
                  description: Whether the search is Sensitive
                  example: 0

    ApiTagSearchPostList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            didEndOfList:
              type: integer
              format: int32
              description: >
                0 if there are most posts available older than the last post of
                the returned posts, 1 if otherwise
              example: 0
            posts:
              type: array
              items:
                $ref: '#/components/schemas/Post'
            tag:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - type: object
                  properties:
                    isSensitive:
                      type: integer
                      description: Whether the tag is Sensitive
                      example: 0

    ApiLatestEntryIds:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            entryIds:
              type: array
              items:
                type: string

    ApiTagSuggestions:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            tags:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                    example: apex legends
                  highlighted:
                    type: string
                    example: <em>ap</em>ex legends
                  count:
                    type: integer
                    example: 9616

    ApiUserNotifications:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    - NotiSystemError
        data:
          type: object
          properties:
            items:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/UserNotification'
                  - $ref: '#/components/schemas/UserNotificationPost'
                  - $ref: '#/components/schemas/UserNotificationComment'
                  - $ref: '#/components/schemas/UserNotificationMilestone'
                # FIXME: Add example response values
            nextKey:
              type: string
              description: Reference key for pagination
              example: '1508376725_ni_a_45c3bb09efeae31cdd5ad2a7320d0507e7f72f3b_13169934_COMMENT_http:\/\/9gag.com\/gag\/azbgNRx'
            didEndOfList:
              type: integer
              format: int32
              description: >
                0 if there are most posts available older than the last post of
                the returned posts, 1 if otherwise
              example: 0

    ApiUserPushSettings:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            types:
              type: object
              properties:
                UPVOTE:
                  type: string
                  example: Upvote your post
                FEATURED:
                  type: string
                  example: Feature your post
                COMMENT:
                  type: string
                  example: Comment your post
                COMMENT_REPLY:
                  type: string
                  example: Reply your comment
                COMMENT_UPVOTE:
                  type: string
                  example: Upvote your Comment
                COMMENT_MENTION:
                  type: string
                  example: Mention you in a comment
                MILESTONE_POST_UPVOTE:
                  type: string
                  example: Milestone for post point
                MILESTONE_POST_COMMENT:
                  type: string
                  example: Milestone for post comment
                MILESTONE_COMMENT_UPVOTE:
                  type: string
                  example: Milestone for comment point
                MILESTONE_COMMENT_REPLY:
                  type: string
                  example: Milestone for comment reply
            settings:
              type: object
              properties:
                UPVOTE:
                  type: integer
                  description: 1 - off, 1 - on
                  example: 1
                FEATURED:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_REPLY:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                COMMENT_MENTION:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_POST_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_POST_COMMENT:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_COMMENT_UPVOTE:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1
                MILESTONE_COMMENT_REPLY:
                  type: integer
                  description: 0 - off, 1 - on
                  example: 1

    ApiUserPushSettingsUpdate:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:

    ApiUserNotificationsItemReadState:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:

    ApiBoardNotification:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object

    ApiFollowThreadStatus:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            followed:
              type: integer
              description: 0 - not followed, 1 - followed
              default: 0

    ApiFollowThread:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object

    ApiPostQuota:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            quota:
              type: integer
              description: Available upload quota
              example: 10
            limit:
              type: integer
              description: '[Deprecated]'
              example: -1
            wait:
              type: integer
              description: Time (seconds) to wait when quota used up
              example: 0
            cooldown:
              type: integer
              description: '[Deprecated]'
              example: 0

    ApiConfig:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            upload:
              type: object
              properties:
                titleLengthMin:
                  type: integer
                  example: 4
                titleLengthMax:
                  type: integer
                  example: 200
                sectionsCountMax:
                  type: integer
                  description: '[Deprecated]'
                  example: 1
                tagsCountMax:
                  type: integer
                  example: 3
                tagLengthMin:
                  type: integer
                  example: 1
                tagLengthMax:
                  type: integer
                  example: 25
                maxVideoFilesize:
                  type: integer
                  example: 20971520
                maxAnimatedFilesize:
                  type: integer
                  example: 20971520
                maxImageFilesize:
                  type: integer
                  example: 10485760
            profile:
              type: object
              properties:
                activeDuration:
                  type: integer
                  example: 1800
                emojiStatus:
                  type: object
                  properties:
                    enabled:
                      type: integer
                      example: 1
                    list:
                      type: array
                      items:
                        type: object
                        description: List of user status
                        properties:
                          name:
                            type: string
                            example: Germany
                          status:
                            type: string
                            example: 🇩🇪
                    listPro:
                      type: array
                      items:
                        type: object
                        description: List of user status for PRO users or above
                        properties:
                          name:
                            type: string
                            example: Germany
                          status:
                            type: string
                            example: 🇩🇪
                    listProPlus:
                      type: array
                      items:
                        type: object
                        description: List of user status for PRO+ users
                        properties:
                          name:
                            type: string
                            example: Germany
                          status:
                            type: string
                            example: 🇩🇪
                accentColor:
                  type: object
                  properties:
                    enabled:
                      type: integer
                      example: 1
                    list:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Red
                          code:
                            type: string
                            example: '#FF0000'
                backgroundColor:
                  type: object
                  properties:
                    enabled:
                      type: integer
                      example: 0
                    list:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Red
                          code:
                            type: string
                            example: '#FF0000'

    ApiUrlInfo:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            urlInfos:
              additionalProperties:
                anyOf:
                  - $ref: '#/components/schemas/UrlInfoYouTube'
                  - $ref: '#/components/schemas/UrlInfoInstagram'

    ApiPostSubmitMeta:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResponseMeta'
        - type: object
          properties:
            errorCode:
              type: string
              description: A server defined error code
              example:
              enum:
                - INVALID_UPLOAD_ID
                - UPLOAD_NOT_READY
                - NO_MEDIA_FOUND
                - UNSUPPORTED_URL

    ApiPostSubmit:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApiPostSubmitMeta'
        data:
          type: object
          properties:
            entryId:
              type: string
              description: '[Deprecated]'
              example: aY4nNrm
            metaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            mediaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            imageStatus:
              type: integer
              description: '[Deprecated]'
              example: 1
            post:
              $ref: '#/components/schemas/Post'

    ApiPostSubmitUrlData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApiPostSubmitMeta'
        data:
          type: object
          properties:
            metaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            mediaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            imageStatus:
              type: integer
              description: '[Deprecated]'
              example: 1
            urlInfos:
              additionalProperties:
                anyOf:
                  - $ref: '#/components/schemas/UrlInfoYouTube'
                  - $ref: '#/components/schemas/UrlInfoInstagram'

    ApiPostSubmitArticleMedia:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApiPostSubmitMeta'
        data:
          type: object
          properties:
            entryId:
              type: string
              description: '[Deprecated]'
              example: aY4nNrm
            metaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            mediaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            imageStatus:
              type: integer
              description: '[Deprecated]'
              example: 1
            articleMedia:
              $ref: '#/components/schemas/PostArticleMediaPhoto'

    ApiPostSubmitArticleData:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApiPostSubmitMeta'
        data:
          type: object
          properties:
            metaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            mediaStatus:
              type: integer
              description: '0 - not ready, 1 - Ready'
              example: 1
            imageStatus:
              type: integer
              description: '[Deprecated]'
              example: 1

    ApiAuthenticatedUser:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    - InvalidUserId
                    - NoLoginUserFound
        data:
          type: object
          properties:
            user:
              type: object
              $ref: '#/components/schemas/AuthenticatedUser'

    ApiProfileUser:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    - InvalidUserId
                    - NoLoginUserFound
        data:
          type: object
          properties:
            user:
              type: object
              $ref: '#/components/schemas/PublicUser'

    ApiUserInfo:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            votes:
              type: object
              description: 'User votes'
              additionalProperties:
                type: integer
                enum:
                  - 1
                  - 0
                  - -1
              example:
                amX4Zrd: 1
                a1AApYY: -1
            saves:
              type: array
              description: 'User saved Post IDs'
              items:
                type: string
                example: amX4Zrd
            uploads:
              type: array
              description: 'User uploaded Post IDs'
              items:
                type: string
                example: amX4Zrd
            reports:
              type: array
              description: 'User reported Post IDs'
              items:
                type: string
                example: a1AApYY

    ApiBlockUserList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            didEndOfList:
              type: integer
              format: int32
              example: 0
            users:
              type: array
              items:
                $ref: '#/components/schemas/PublicUser'

    ApiBlockUser:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object

    ApiGroupList:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            groups:
              type: array
              $ref: '#/components/schemas/Group'
            locals:
              type: array
              $ref: '#/components/schemas/Group'
            featured:
              type: array
              $ref: '#/components/schemas/Group'
            hot:
              type: object
              properties:
                featuredTags:
                  type: array
                  description: List of featured tag objects
                  items:
                    $ref: '#/components/schemas/Tag'

    ApiUserForgotPassword:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            user:
              type: object
              description: '[Deprecated]'
              properties:
                loginName:
                  type: string
                  example: 'calvin'

    ApiUserChangePassword:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  okay:
                    type: bool
                    example: true
                  type:
                    type: string
                    example: password
                  message:
                    type: string
                    example: Password changed.
                  code:
                    type: string
                    example: '[Deprecated]'

    ApiSettings:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  okay:
                    type: bool
                    example: true
                  type:
                    type: string
                    example: password
                    enum:
                      - email
                      - loginName
                      - about
                      - country
                      - fullName
                      - birthday
                      - safeMode
                      - nsfwMode
                      - ageVerified
                      - emojiStatus
                      - hideProBadge
                      - onlineStatusMode
                      - accentColor
                      - backgroundColor
                  message:
                    type: string
                  code:
                    type: string
                    example: '[Deprecated]'
            user:
              $ref: '#/components/schemas/AuthenticatedUser'

    ApiUserSocial:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    # TODO: review errorCode
                    - IDENTIFICATION_FAILED
                    - LINKED_TO_ANOTHER_USER
                    - NO_LINKED_PROFILE_FOUND
                    - NO_VALID_PROFILE_FOUND
                    - NO_SUCH_ACCOUNT
        data:
          type: object
          properties:

    ApiUserChangeAvatar:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            results:
              type: array
              items:
                type: object
                properties:
                  okay:
                    type: bool
                    example: true
                  type:
                    type: string
                    example: avatar
                  message:
                    type: string
                    example: Avatar updated.
                  code:
                    type: string
                    example: '[Deprecated]'
            avatar:
              type: object
              properties:
                avatarUrlLarge:
                  type: string
                  example: https://accounts-cdn.9jokes.com/media/default-avatar/1_142_800_v0.jpg
                avatarUrlMedium:
                  type: string
                  description: '[Deprecated]'
                  example: https://accounts-cdn.9jokes.com/media/default-avatar/1_142_100_v0.jpg
                avatarUrlSmall:
                  type: string
                  example: https://accounts-cdn.9jokes.com/media/default-avatar/1_142_100_v0.jpg
                avatarUrlTiny:
                  type: string
                  description: '[Deprecated]'
                  example: https://accounts-cdn.9jokes.com/media/default-avatar/1_142_100_v0.jpg

    ApiGuestToken:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          type: object
          properties:
            userToken:
              type: string
              description: The requested guest token
              example: Y29tLm5pbmVnYWcuYW5kcm9pZC5hcHAqNnJhdGVpOG1z
            tokenExpiry:
              type: integer
              format: int64
              example: 1499924598
            secondsTillExpiry:
              type: integer
              format: int32
              example: 259200
            algoliaToken:
              type: string
              description: Deprecated

    ApiUserToken:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: A server defined error code
                  example:
                  enum:
                    - LoginFailed
                    - ServerError
                    - ExternalError
                    - AccountDisabled
                    - AlreadyMember
                    - InvalidEmail
                    - InvalidPassword
                    - InvalidFullName
                    - UpdateDisabled
                    - FailedToSignup
        data:
          type: object
          properties:
            userToken:
              type: string
              description: The requested guest token
              example: 8a2284a1dbe5e87d34b2442c9e551ab013170040
            tokenExpiry:
              type: integer
              format: int64
              example: 1508745973
            secondsTillExpiry:
              type: integer
              format: int32
              example: 43200
            algoliaToken:
              type: string
              description: Deprecated
            user:
              $ref: '#/components/schemas/AuthenticatedUser'
            commentAuth:
              type: object
              properties:
                type:
                  type: string
                  description: Always "sso"
                  example: sso
                authHash:
                  type: string
                  description: Authenticate secret for Comment System
                  example: eyJpZCI6MTMxNjk5MzgsImVtYWlsIjoiY2FsdmluQDlnYWcuY29tIiwiZGlzcGxheU5hbWUiOiJjYWx2aW4iLCJhdmF0YXJVcmwiOiJodHRwczpcL1wvYWNjb3VudHMtY2RuLjlqb2tlcy5jb21cL21lZGlhXC9hdmF0YXJcLzEzMTY5OTM4XzEwMF8yMi5qcGciLCJwcm9maWxlVXJsIjoiaHR0cHM6XC9cLzlqb2tlcy5jb21cL3VcL2NhbHZpbiIsInBlcm1pc3Npb25zIjp7IkdhbWVZYXlfTW9kZXJhdG9yIjotMSwiOUdBR19TdGFmZiI6LTEsIjlHQUdfUHJvIjotMX0sImlzVmVyaWZpZWQiOnRydWV9|28b09e645530b65eee1518e6fadc71f7d455ff61|1508745928
                expirtyTs:
                  type: integer
                  format: int32
                  example: 1508789128
            noti:
              type: object
              properties:
                readStateParams:
                  type: string
                  description: Authenticate secret for Notification System to get/reset unread count
                  example: appId=a_45c3bb09efeae31cdd5ad2a7320d0507e7f72f3b&userId=13169938&type=WEB&signature=8xxxxxxdd2b7f0ee709770f58f5434exxxxd7
                chatBadgeReadStateParams:
                  type: string
                  description: Deprecated

    ApiUserPurchaseValidation:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: >
                    A server defined error code
                      * IAPUnrecognizedProduct - Unrecognised Product
                      * IAPInvalidPayload - Invalid Receipt
                      * IAPTokenAlreadyUsed - Token already Used
                      * IAPInactivateSubscription - Inactive Subscription
                      * IAPIneligibleUpgrade - Ineligible Upgrade
                      * IAPErrorException - General Error
                  example: IAPTokenAlreadyUsed
                  enum:
                    - IAPUnrecognizedProduct
                    - IAPInvalidPayload
                    - IAPTokenAlreadyUsed
                    - IAPInactivateSubscription
                    - IAPIneligibleUpgrade
                    - IAPErrorException
                    -
    ApiUserPurchaseBindingPost:
      type: object
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/ResponseMeta'
            - type: object
              properties:
                errorCode:
                  type: string
                  description: >
                    A server defined error code
                      * IAPRecordNotFound - Token record not found
                      * IAPUserNotFound - User not found
                      * IAPUserNotEligible - (Receiving) User ineligible for transfer, e.g. banned
                      * IAPRecordInactive - Purchase record is no longer active, e.g. revoked
                      * IAPSubscriptionNotEligible - Subscription ineligible for transfer
                      * IAPManualAssignedNotEligible - Manual assigned purchase ineligible for transfer
                      * IAPTokenTransferred - Token already prompted for binding transfer
                      * IAPRecordPurchaseDateIneligible - Purchase date of record is beyond the defined cutoff
                      * IAPTransferError - General Error
                  example: IAPTokenTransferred
                  enum:
                    - IAPRecordNotFound
                    - IAPUserNotFound
                    - IAPUserNotEligible
                    - IAPRecordInactive
                    - IAPSubscriptionNotEligible
                    - IAPManualAssignedNotEligible
                    - IAPTokenTransferred
                    - IAPRecordPurchaseDateIneligible
                    - IAPTransferError

    AuthenticatedUser:
      type: object
      allOf:
      - $ref: '#/components/schemas/PublicUser'
      - AuthenticatedUserProperties:
        type: object
        properties:
          hasPassword:
            type: integer
            format: int32
            description: 0 if account password is not set (signup from social connect)
            example: 1
          fbUserId:
            type: string
            description: Connected to Facebook if non-empty
            example: 506818362
          gplusUserId:
            type: string
            description: Connected to Google if non-empty
            example: 118059243496917070085
          safeMode:
            type: integer
            description: 0 to mask Sensitive posts
            example: 0
          nsfwMode:
            type: integer
            description: 0 to filter Sensitive posts/sections
            example: 0
          gender:
            type: string
            example: M
            enum:
              - M
              - F
              -
          birthday:
            type: string
            description: Date of Birth
            example: '1987-01-01 00:00:00'
          isVerified:
            type: object
            description: Verified status
            properties:
              email:
                type: integer
                example: 1
              age:
                type: integer
                example: 0
          preferences:
            type: object
            properties:
              hideProBadge:
                type: integer
                description: 0 - show, 1 - hide
              hideActiveTs:
                type: integer
                description: 0 - show, 1 - hide
              onlineStatusMode:
                type: integer
                description: 1 - Normal, 2 - Private, 3 - Ninja (PRO+ only)
                example: 2
              accentColor:
                type: string
                description: Accent color for PRO+ users
                example: 'Blue'
              backgroundColor:
                type: string
                description: Background color for PRO+ users
                example: 'Red'
          membership:
            type: object
            properties:
              productId:
                type: string
                description: Product ID of the purchase
                example: 'com.ninegag.android.app.pro'
              purchaseTs:
                type: integer
                description: Timestamp of purchase
                example: 1581670948
              subscription:
                type: object
                properties:
                  expiryTs:
                    type: integer
                    description: Timestamp of subscription expiry
                    example: 1581670948
                  isGracePeriod:
                    type: integer
                    description: Whether or not the subscription is in a grace period status
                    example: 1
                  isExpired:
                    type: integer
                    description: Whether or not the subscription has expired
                    example: 0
      - $ref: '#/components/schemas/DeprecatedUserProperties'

    PublicUser:
      type: object
      properties:
        userId:
          type: string
          example: '13169938'
        accountId:
          type: string
          example: '13169938'
        loginName:
          type: string
          example: calvin
        fullName:
          type: string
          example: Calvin Tsang
        emojiStatus:
          type: string
          example: 🇩🇪
        about:
          type: string
          example: My Funny Collection
        country:
          type: string
          description: User hometown
          example: hk
        location:
          type: string
          description: User location
          example: hk
        profileUrl:
          type: string
          example: https://9jokes.com/u/calvin
        avatarUrlLarge:
          type: string
          example: https://accounts-cdn.9jokes.com/media/avatar/13169938_800_22.jpg
        avatarUrlSmall:
          type: string
          example: https://accounts-cdn.9jokes.com/media/avatar/13169938_100_22.jpg
        isActivePro:
          type: integer
          example: 0
          enum:
            - 1
            - 0
        isActiveProPlus:
          type: integer
          example: 0
          enum:
            - 1
            - 0
        creationTs:
          type: integer
          description: User creation timestamp
          default: 0
        activeTs:
          type: integer
          description: User active timestamp
          default: 0
        preferences:
          type: object
          properties:
            hideProBadge:
              type: integer
              description: 0 - show, 1 - hide
            hideActiveTs:
              type: integer
              description: 0 - show, 1 - hide
            accentColor:
              type: string
              description: Accent color for PRO+ users
              example: 'Blue'
            backgroundColor:
              type: string
              description: Background color for PRO+ users
              example: 'Red'
    DeprecatedUserProperties:
      type: object
      properties:
        profileColor:
          type: string
          description: Deprecated
        fbDisplayName:
          type: string
          description: Deprecated
        gplusAccountName:
          type: string
          description: Deprecated
        canPostToFB:
          type: integer
          description: Deprecated
        fbPublish:
          type: integer
          description: Deprecated
        fbTimeline:
          type: integer
          description: Deprecated
        fbLikeAction:
          type: integer
          description: Deprecated
        fbCreateAction:
          type: integer
          description: Deprecated
        fbCommentAction:
          type: integer
          description: Deprecated
        lang:
          type: string
          description: Deprecated
        timezoneGmtOffset:
          type: integer
          description: Deprecated
        website:
          type: string
          description: Deprecated
        avatarUrlMedium:
          type: string
          description: Deprecated
        avatarUrlTiny:
          type: string
          description: Deprecated
        permissions:
          type: object
          description: Deprecated
          additionalProperties:
            type: object
            properties:
              name:
                type: string
                example: Permission name
              expirationTs:
                type: integer
                example: -1
        hideUpvote:
          type: string
          description: Deprecated
          example: 1

    UserNotification:
      type: object
      description: Generic user notification
      properties:
        id:
          type: string
          description: Notification ID
          example: ni_a_45c3bb09efeae31cdd5ad2a7320d0507e7f72f3b_13169934_UPVOTE_7664799
        type:
          type: string
          description: Notification type
          enum:
            - UPVOTE
        url:
          type: string
          description: Notification url, empty for no click action
          example: https://9gag.com/gag/apqoAWW?ref=w.milestonecommentreply#cs_comment_id=c_156585446232489424
        message:
          type: string
          description: Notification message
          example: 'calvin2017 upvoted your post.'
        wrap_message:
          type: string
          description: Notification message
          example: '[calvin2017] upvoted your post.'
        timestamp:
          type: string
          description: Notification timestamp
          example: '1509046164'
        isRead:
          type: bool
          description: Notification read state
          example: false
        suppData:
          type: object
          $ref: '#/components/schemas/UserNotificationSuppData'
        users:
          type: array
          items:
            $ref: '#/components/schemas/PublicUser'

    UserNotificationPost:
      type: object
      description: User notification for post related events
      allOf:
        - $ref: '#/components/schemas/UserNotification'
        - UserNotificationPostProperties:
          type: object
          properties:
            type:
              type: string
              description: Notification type
              enum:
                - UPVOTE
                - FEATURED
            suppData:
              $ref: '#/components/schemas/UserNotificationPostSuppData'
            message:
              type: string
              description: Notification message
              example: 'Your post is now featured on Hot page. AWESOME!'
            wrap_message:
              type: string
              description: Notification message
              example: 'Your post is now featured on Hot page. AWESOME!'
            post:
              $ref: '#/components/schemas/Post'

    UserNotificationComment:
      type: object
      description: User notification for comment related events
      allOf:
        - $ref: '#/components/schemas/UserNotification'
        - UserNotificationCommentProperties:
          type: object
          properties:
            type:
              type: string
              description: Notification type
              enum:
                - COMMENT
                - COMMENT_REPLY
                - COMMENT_UPVOTE
                - COMMENT_MENTION
            suppData:
              $ref: '#/components/schemas/UserNotificationCommentSuppData'
            message:
              type: string
              description: Notification message
              example: 'calvin, paulojunior1000 and 2 others upvoted your comment.'
            wrap_message:
              type: string
              description: Notification message
              example: '[calvin], [paulojunior1000] and 2 others upvoted your comment.'
            post:
              $ref: '#/components/schemas/Post'


    UserNotificationMilestone:
      type: object
      description: User notification for milestone related events
      allOf:
        - $ref: '#/components/schemas/UserNotification'
        - UserNotificationCommentProperties:
          type: object
          properties:
            type:
              type: string
              description: Notification type
              enum:
                - MILESTONE_POST_UPVOTE
                - MILESTONE_POST_COMMENT
                - MILESTONE_COMMENT_UPVOTE
                - MILESTONE_COMMENT_REPLY
            suppData:
              $ref: '#/components/schemas/UserNotificationMilestoneSuppData'
            message:
              type: string
              description: Notification message
              example: 'Your post got over 200 points!'
            wrap_message:
              type: string
              description: Notification message
              example: 'Your post got over 200 points!'
            post:
              $ref: '#/components/schemas/Post'

    UserNotificationSuppData:
      type: object
      properties:
        totalCount:
          type: int32
          description: Number of aggregated events represented by this notification item
          example: 3

    UserNotificationPostSuppData:
      type: object
      allOf:
        - $ref: '#/components/schemas/UserNotificationSuppData'
        - UserNotificationCommentSuppDataProperties:
          type: object
          properties:
            image:
              type: string
              example: 'https://9gag.com/img/milestone/hot.png'

    UserNotificationCommentSuppData:
      type: object
      allOf:
        - $ref: '#/components/schemas/UserNotificationSuppData'
        - UserNotificationCommentSuppDataProperties:
          type: object
          properties:
            commentId:
              type: string
              description: The ID of comment which the action acted on
              example: c_150837672517793483
            commentMessage:
              type: string
              example: LOL It's fun
            commentType:
              type: string
              enum:
                - text
                - media
                - userMedia
            highlightCommentId:
              type: string
              description: The ID of comment for UI highlight
              example: c_150657268541066633

    UserNotificationMilestoneSuppData:
      type: object
      allOf:
        - $ref: '#/components/schemas/UserNotificationSuppData'
        - UserNotificationMilestoneSuppDataProperties:
          type: object
          properties:
            milestone:
              type: int32
              example: 200
            image:
              type: string
              example: 'https://9gag.com/img/milestone/comment-upvote.png'

    Group:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 27
        url:
          type: string
          description: The relative URL of this section
          example: funny
        name:
          type: string
          description: The section display name
          example: Funny
        description:
          type: string
          description: The description of this section
          example: Why so serious
        userUploadEnabled:
          type: integer
          format: int32
          description: '0 if disabled, 1 if enabled'
          example: 1
        isSensitive:
          type: integer
          description: Whether the section is Sensitive
          example: 0
        ogImageUrl:
          type: string
          description: An image URL representing the section
          example: >
            https://miscmedia-9gag-fun.9cache.com/images/thumbnail-facebook/1481536354.227_YsUzaZ_220x220.jpg
        ogWebpUrl:
          type: string
          description: An webp URL representing the section
          example: >
            https://miscmedia-9gag-fun.9cache.com/images/thumbnail-facebook/1481536354.227_YsUzaZ_100x100wp.webp
        featuredTags:
          type: array
          description: List of featured tag objects
          items:
            $ref: '#/components/schemas/Tag'
        listTypes:
          type: array
          description: "List types available"
          items:
            type: string
          example: [hot, fresh]
        location:
          type: string
          description: Location of the section, empty for non-local Section.
          example: hk
        listType:
          type: string
          description: "[Deprecated]"
          example: hot
        listType2:
          type: string
          description: "[Deprecated]"
          example: hot
        posts:
          type: array
          description: "[Deprecated]"

    Post:
      type: object
      allOf:
        - $ref: '#/components/schemas/BasePostProperties'
        - $ref: '#/components/schemas/DeprecatedPostProperties'

    ProfilePost:
      type: object
      allOf:
        - $ref: '#/components/schemas/BasePostProperties'
        - $ref: '#/components/schemas/ProfilePostProperties'
        - $ref: '#/components/schemas/DeprecatedPostProperties'

    FeaturedPost:
      type: object
      allOf:
        - $ref: '#/components/schemas/BasePostProperties'
        - $ref: '#/components/schemas/DeprecatedPostProperties'

    PostArticleMediaPhoto:
      type: object
      properties:
        id:
          type: string
          description: Media ID
          example: amX4Zrd
        type:
          type: string
          description: Photo/Video/Animated
          example: Photo
          enum:
            - Photo
            - Animated
            - Video
        images:
          $ref: '#/components/schemas/PostImage'
        hasImageTile:
          type: integer
          description: Whether media object has ImageTile objects (1 for yes, 0 for no)
          example: 1
        postTile:
          $ref: '#/components/schemas/PostImageTiles'
        video:
          $ref: '#/components/schemas/PostVideo'
        colors:
          $ref: '#/components/schemas/Color'

    BasePostProperties:
      type: object
      properties:
        id:
          type: string
          description: Post ID
          example: amX4Zrd
        url:
          type: string
          description: Post URI
          example: "http://9gag.com/gag/amX4Zrd"
        status:
          type: integer
          description: 0 - normal, 1 - deleted
          example: 0
        title:
          type: string
          description: Post title
          example: You know it's true!
        description:
          type: string
          description: Post description markdown
        type:
          type: string
          description: Photo/Video/Animated/Article
          example: Photo
          enum:
            - Photo
            - Animated
            - Video
            - Article
        version:
          type: integer
          description: Post version
          example: 3
        nsfw:
          type: integer
          description: NSFW status, 0 - safe, 1 - Not safe
          example: 0
        upVoteCount:
          type: integer
          description: Upvotes
          example: 2
        downVoteCount:
          type: integer
          description: Downvotes
          default: 0
        creationTs:
          type: integer
          description: Post creation timestamp
          default: 0
        orderId:
          type: integer
          description: The order ID of post on given post list
          example: 107
        hasLongPostCover:
          type: integer
          description: Only for type Photo/Animated, 1 - Has 460c cover, 0 - No 460c cover
          example: 1
        images:
          $ref: '#/components/schemas/PostImage'
        hasImageTile:
          type: integer
          description: Whether post object has ImageTile objects (1 for yes, 0 for no)
          example: 1
        postTile:
          $ref: '#/components/schemas/PostImageTiles'
        video:
          $ref: '#/components/schemas/PostVideo'
        article:
          $ref: '#/components/schemas/PostArticle'
        sourceDomain:
          type: string
          example:
            instagram.com
        sourceUrl:
          type: string
          example: https://www.instagram.com/p/BXj4iLglk7R/?taken-by=9gag
        isVoted:
          type: string
          enum:
            - '1'
            - '0'
        isVoteMasked:
          type: integer
          description: Whether vote count should be masked to users
          enum:
            - 1
            - 0
        userScore:
          type: integer
          enum:
            - 1
            - 0
            - -1
        creator:
          anyOf:
            - $ref: '#/components/schemas/PostCreator'
            - $ref: '#/components/schemas/PublicUser'
        commentsCount:
          type: integer
        comment:
          type: object
          properties:
            listType:
              type: string
              enum:
                - comment
                - board
            updateTs:
              type: integer
              description: Latest comment timestamp
              default: 0
            latestCommentText:
              type: string
              description: Latest comment text preview. 'GIF' for animated comment and 'IMAGE' for static image comment.
        board:
          type: object
          properties:
            followed:
              type: integer
              description: 0 - not followed, 1 - followed
              default: 0
            muted:
              type: integer
              description: 0 - notify, 1 - muted
              default: 0
            notification:
              type: object
              properties:
                topic:
                  type: string
                  description: Firebase topic name for triggering push notifications on this board post
                shouldSubscribe:
                  type: integer
                  description: 0 - should not subscribe, 1 - should subscribe for push noti
                  default: 0
        postSection:
          $ref: '#/components/schemas/PostSection'
        tags:
          type: array
          description: List of tag objects
          items:
            $ref: '#/components/schemas/Tag'
        colors:
          $ref: '#/components/schemas/Color'
        promoted:
          type: integer
          description: Promoted status, 0 - Not promoted, 1 - Promoted
          example: 0
          enum:
            - 1
            - 0

      required:
        - id
        - url
        - title
        - type
        - version
        - nsfw
        - upVoteCount
        - commentsCount

    ProfilePostProperties:
      type: object
      properties:
        postUser:
          $ref: '#/components/schemas/PostUser'

    DeprecatedPostProperties:
      type: object
      properties:
        albumWebUrl:
          type: string
          description: "[Deprecated] The url that only return for type=Album."
          example: https://m.9gag.com/gag-in-app/a9AZ8RL
        externalUrl:
          type: string
          description: "[Deprecated] Always return empty string"
          default: ''
        totalVoteCount:
          type: integer
          description: "[Deprecated] Use upVoteCount instead"
        viewsCount:
          type: integer
          description: "[Deprecated] Value will be always 0"
          default: 0
        score:
          type: integer
          description: "[Deprecated] Value will be always 0"
          default: 0
        reportedStatus:
          type: integer
          description: "[Deprecated] Value will be always 0"
          default: 0
        sortTs:
          type: integer
          description: "[Deprecated] Value will be always 1"
          default: 1
        imageUrlVideoPreview:
          type: string
          description: "[Deprecated] Use PostVideo object instead."
          example: https://img.youtube.com/vi/AWoBAjovHT4/0.jpg
        videoSource:
          type: string
          description: "[Deprecated] Use PostVideo object instead."
          example: YouTube
        videoId:
          type: string
          description: "[Deprecated] Use PostVideo object instead."
          example: AWoBAjovHT4
        channel:
          type: string
          description: "[Deprecated] Always return empty string"
          default: ''
        fbShares:
          type: integer
          description: "[Deprecated] Value will be always 0"
          default: 0
        tweetCount:
          type: integer
          description: "[Deprecated] Value will be always 0"
          default: 0
        created:
          type: string
          description: "[Deprecated] Value will be always empty string"
          default: ''
        targetedAdTags:
          type: array
          description: '[Deprecated] Always return empty array'
        commentOpClientId:
          type: string
          description: "[Deprecated] Always return empty string"
          default: ''
        commentOpSignature:
          type: string
          description: "[Deprecated] Always return empty string"
          default: ''
        commentSystem:
          type: string
          description: "[Deprecated] Always return 'comment-system'"
          default: 'comment-system'
        topComments:
          type: object
          description: "[Deprecated] Always return empty array"
          properties:
            comments:
              type: array
              items:
                type: object

    PostUser:
      type: object
      description: Only available when listType=overview/upload/upvote/comment
      properties:
        actions:
          type: string
          description: Comma separated actions that user has act on this post
          example: upload,upvote,comment
        actionsText:
          type: string
          description: Formatted actions that user has act on this post
          example: uploaded, upvoted and commented
        commentId:
          type: string
          description: Latest commentId user commented on this post, empty if user have not commented
          example: c_13905335653850
        actionsLoginName:
          type: string
          description: Username of user that acted on this post
          example: raymond
        actionsAccountId:
          type: string
          description: AccountId of user that acted on this post
          example: 15000014
      required:
        - actions
        - actionsText
        - commentId

    PostCreator:
      type: object
      properties:
        userId:
          type: string
          description: "Return userId if the caller is the owner of the post, otherwise returns -1"
          example: 2435901
        userName:
          type: string
          description: "[Deprecated] Return empty for compatibility"
          example: LOLcat
        profileUrl:
          type: string
          description: "[Deprecated] Return empty for compatibility"
          example: e.g. https://9gag.com/derek
        avatarUrlSmall:
          type: string
          description: "[Deprecated] Return empty for compatibility"
      required:
        - userId

    PostSection:
      type: object
      properties:
        name:
          type: string
          description: "Name"
          example: Funny
        url:
          type: string
          description: "Section/Profile URL of Post Section, empty for Promoted Post"
          example: https://9gag.com/funny
        imageUrl:
          type: string
          description: "Image url"
          example: https://stg-miscmedia-9gag-fun.9cache.com/images/thumbnail-facebook/1504099501.5492_DeHAWE_100x100.jpg
        webpUrl:
          type: string
          description: "WebP url if available"
          example: https://stg-miscmedia-9gag-fun.9cache.com/images/thumbnail-facebook/1504099501.5492_DeHAWE_100x100wp.webp

    PostVideo:
      type: object
      description: Video entry information
      properties:
        id:
          type: string
          description: The id of a video entry of video record from a third party service (e.g. YouTube)
          example: mkualZPRZCs
        source:
          type: string
          description: The name of the video service provider
          enum:
            - YouTube
            - Embed
        duration:
          type: integer
          description: Duration of video (in second), 0 if not available
          example: 100
        startTs:
          type: integer
          description: Start time of video (in second)
          example: 1
        embedUrl:
          type: string
          description: Embed video url, only when post type=EmbedVideo
          example: https://www.facebook.com/plugins/video.php?appId=223078941066352&autoplay=true&href=https%3A%2F%2Fwww.facebook.com%2F9gag%2Fvideos%2F701437377012590%2F

    PostArticleBlock:
      type: object
      properties:
        type:
          type: string
          description: Type of article block
          enum:
            - RichText
            - Media
        content:
          type: string
          description: Content for rich text with markdown
          example: "### Foundations (HTML\/CSS\/JS)"
        mediaId:
          type: string
          description: ID for media reference in medias
          example: a1AApYY
        caption:
          type: string
          description: Caption for media
          example: Picture 1

    PostArticle:
      type: object
      description: Article entry information
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/PostArticleBlock'
        medias:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PostArticleMediaPhoto'

    ImageMeta:
      type: object
      properties:
        width:
          type: integer
          description: Image Width
          example: 532
        height:
          type: integer
          description: Image Height
          example: 840
        url:
          type: string
          description: Image URL
          example: https://9gag.dev/photo/3993513_700b.jpg
      required:
        - width
        - height
        - url

    VideoMeta:
      allOf:
        - $ref: '#/components/schemas/ImageMeta'
        - type: object
          properties:
            hasAudio:
              type: integer
              description: Whether audio channel is enabled for video file
              example: 1
            duration:
              type: integer
              description: Duration of video (in second), 0 if not available
              default: 0
              example: 30

    ImageTile:
      type: object
      properties:
        height:
          type: integer
          description: total height of image
          example: 840
        width:
          type: integer
          description: width of image
          example: 532
        images:
          type: array
          description: list of ImageMeta
          items:
            $ref: '#/components/schemas/ImageMeta'

    PostImageTiles:
      type: object
      description: For android performance tuning
      properties:
        h800:
          $ref: '#/components/schemas/ImageTile'

    PostImage:
      type: object
      description: Set of images with dimensions and url, see PostImage and ImageMeta object
      properties:
        imageXLarge:
          $ref: '#/components/schemas/ImageMeta'
        image700:
          $ref: '#/components/schemas/ImageMeta'
        image460:
          $ref: '#/components/schemas/ImageMeta'
        image220x145:
          $ref: '#/components/schemas/ImageMeta'
        imageFbThumbnail:
          $ref: '#/components/schemas/ImageMeta'
        image460sv:
          $ref: '#/components/schemas/VideoMeta'
        image460c:
          $ref: '#/components/schemas/ImageMeta'
      required:
        - image700
        - image460
        - image220x145
        - imageFbThumbnail

    Tag:
      type: object
      properties:
        key:
          type: string
          example: funny
        url:
          type: string
          example: https://9gag.com/tag/funny

    Color:
      type: object
      properties:
        placholder:
          type: string
          example: '#ffcc00'

    UrlInfoInstagram:
      type: object
      properties:
        platform:
          type: string
          example: instagram
        title:
          type: string
          example: Instagram post by Lady Gaga 2022 Mar 8, 2017 at 1:07am UTC
        videos:
          type: array
          items:
            type: object
            properties:
              hasAudio:
                type: integer
                description: 0 - without audio, 1 - with audio
                example: 1
              duration:
                type: integer
                example: 37
              height:
                type: integer
                example: 360
              width:
                type: integer
                example: 640
              thumbnail:
                type: object
                properties:
                  width:
                    type: integer
                    example: 1080
                  height:
                    type: integer
                    example: 607
                  url:
                    type: string
                    example: https://scontent-hkg3-1.cdninstagram.com/t51.2885-15/s1080x1080/e15/fr/17126387_111758079354546_1626314840081432576_n.jpg

    UrlInfoYouTube:
      type: object
      properties:
        platform:
          type: string
          example: youtube
        title:
          type: string
          example: OneRepublic - Counting Stars
        youtubeVideos:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: hT_nvWreIhg
              duration:
                type: integer
                example: 284
              start:
                type: integer
                example: 0
              height:
                type: integer
                example: 480
              width:
                type: integer
                example: 640
              thumbnail:
                type: object
                properties:
                  width:
                    type: integer
                    example: 640
                  height:
                    type: integer
                    example: 480
                  url:
                    type: string
                    example: https://i.ytimg.com/vi/hT_nvWreIhg/sddefault.jp

    FeaturedAd:
      type: object
      properties:
        position:
          type: integer
          description: "Featured Ad Position"
          example: 1
        width:
          type: integer
          description: "Featured Ad Max Width"
          example: 640
        height:
          type: integer
          description: "Featured Ad Max Height"
          example: 360
        url:
          type: string
          description: "Featured Ad URL"
          example: https://www.ora.tv/embed/partner/9gag/playlist/343/v/1


  parameters:
    headerTimestamp:
      name: 9GAG-TIMESTAMP
      in: header
      required: true
      description: Current device timestamp
      schema:
        type: integer
        format: int64
        default: 1499664931449

    headerAppId:
      name: 9GAG-APP_ID
      in: header
      required: true
      description: A server recognizable ID of the API consumer
      schema:
        type: string
        default: com.ninegag.android.app

    headerDeviceUuid:
      name: 9GAG-DEVICE_UUID
      in: header
      required: true
      description: A server identifiable UUID of the device
      schema:
        type: string
        default: C87FC0B5-8029-B4C0-2A10-420D6256A31E

    headerDeviceType:
      name: 9GAG-DEVICE_TYPE
      in: header
      description: The type of the device (i.e. android/ios/tablet)
      schema:
        type: string
        default: android
        enum:
          - android
          - android.tablet
          - iphone
          - ipad

    headerRequestSignature:
      name: 9GAG-REQUEST-SIGNATURE
      in: header
      required: true
      description: >
        sha1(sprintf('*%s_._%s._.%s9GAG', [9GAG-TIMESTAMP], [9GAG-APP-ID], [9GAG-DEVICE-UUID]))
      schema:
        type: string
        default: bb295dedfe3b5c5d1d8996e0b290276ab1c9999f

    headerUserAgent:
      name: User-Agent
      in: header
      required: true
      description: 'User-Agent with app version and device information'
      schema:
        type: string
        default: 9GAG/602110 (Samsung Galaxy S7 Edge;Android 7.0.1)

    headerUserToken:
      name: 9GAG-9GAG_TOKEN
      in: header
      required: true
      description: The user token string received from calling /guest-token or /user-token API
      schema:
        type: string
        default: Y29tLm5pbmVnYWcuYW5kcm9pZC5hcHAqNnJhdGVpOG1z

    entryTypes:
      name: entryTypes
      in: query
      description: The post types to return
      schema:
        type: string
        default: 'photo,video,animated'
        enum:
          - 'photo,video,animated'
          - 'photo,video,animated,article'

    userLanguage:
      description: CLDR Locale ID. ex. en_US
      type: string
    userTimezone:
      description: Timezone in tzdata format. ex. America/New_York
      type: string
      example: America/New_York
    userPushToken:
      name: pushToken
      in: query
      description: 'Push notification token to associate with current user. iOS: APNS token, Android: FCM registration_id'
      type: string
